on:
  workflow_dispatch:
name: secure-ci

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  push:
    branches: [ main ]
  workflow_dispatch: {}
  schedule:
    - cron: "0 * * * *"   # every hour (UTC)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---- IaC scan (Checkov) ---------------------------------------------------
  iac_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkov (Terraform)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: iac
          framework: terraform
          quiet: true
          soft_fail: true
          output_format: github_failed_only

  # ---- Build, scan, and push container -------------------------------------
  build_and_scan:
    runs-on: ubuntu-latest
    needs: [ iac_scan ]
    permissions:
      id-token: write
      contents: read
      packages: write
    env:
      # If you set this repo secret, OIDC/AWS steps will run; otherwise theyâ€™re skipped.
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Print trigger info
        run: |
          TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          echo "Triggered by:  ${{ github.event_name }}"
          echo "Ref:           ${{ github.ref }}"
          echo "SHA:           ${{ github.sha }}"
          echo "Started at:    $TS"
          echo "Run URL:       https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: docker build -t ghcr.io/${{ github.repository }}/web:${{ github.sha }} .

      # OIDC (optional): runs only if AWS_ACCOUNT_ID env is non-empty
      - name: Configure AWS creds via OIDC
        if: ${{ env.AWS_ACCOUNT_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GhActions-ReadSecrets
          aws-region: us-east-2

      - name: Get secret (optional)
        if: ${{ env.AWS_ACCOUNT_ID != '' }}
        id: sm
        run: |
          val=$(aws secretsmanager get-secret-value \
                --secret-id secure-ci/api_key \
                --query SecretString --output text || echo '{}')
          echo "api_key=$(echo "$val" | jq -r .api_key)" >> "$GITHUB_OUTPUT"

      - name: Trivy FS scan (deps)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          scan-ref: .
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Trivy Image scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ghcr.io/${{ github.repository }}/web:${{ github.sha }}
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Login GHCR
        if: ${{ success() }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image (tag = commit SHA)
        if: ${{ success() }}
        run: docker push ghcr.io/${{ github.repository }}/web:${{ github.sha }}

      - name: Also tag as 'web'
        if: ${{ success() }}
        run: |
          docker tag ghcr.io/${{ github.repository }}/web:${{ github.sha }} ghcr.io/${{ github.repository }}/web:web
          docker push ghcr.io/${{ github.repository }}/web:web

